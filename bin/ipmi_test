#!/bin/bash

# Now make sure the modules are loaded
for module in ipmi_si ipmi_devintf ipmi_powernv ipmi_ssif ipmi_msghandler; do
    if lsmod |grep -q $module; then
        echo "$module already loaded"
    else
        echo "Attempting to load $module..."
        modprobe $module > /dev/null
        result=$?
        # If the IPMI drivers don't load, it could be the system has no BMC, or
        # the IPMI driver is bad or not applicable to this SUT.
        if [ $result -eq 1 ]; then
            echo
            echo "*******************************************"
            echo "WARNING: Unable to load module $module"
            echo "Continuing run, but in-band IPMI may fail"
            echo "*******************************************"
            echo
        else
            echo "Successfully loaded module $module\n\n"
        fi
    fi
done

# Now get our info from ipmitool to make sure communication works
# First lest check chassis status
echo
echo "Checking for chassis status"
ipmitool chassis status && echo "Successfully got chassis status" && chassis=0 || chassis=1
echo "Checking to see if we can get power status"
ipmitool power status && echo "Successfully got power status" && power=0 || power=1
echo "Checking to see if we can get user data"
ipmitool user list && echo "Successfully got user data" && user=0 || user=1
echo "Checking to see if we can get info on the BMC"
ipmitool bmc info && echo "Successfully got BMC information" && bmc=0 || bmc=1

# if everything passes, exit 0
[ $chassis -eq 0 ] && [ $power -eq 0 ] && [ $user -eq 0 ] && [ $bmc -eq 0 ] &&  exit 0 || echo "FAILURE: chassis: $chassis  power: $power  user: $user  bmc: $bmc"

# otherwise exit 1
exit 1
