# This is for disk/apste_support_on_*
unit: packaging meta-data
os-id: debian
Depends: nvme-cli

plugin: shell
category_id: 2013.com.canonical.plainbox::disk
id: disk/detect
requires: package.name == 'util-linux'
estimated_duration: 0.25
command: disk_info
_summary:
 Display info about each detected disk device
_description: 
 Displays information about each disk detected on the system under test.

unit: template
template-resource: device
template-filter: device.category == 'DISK'
plugin: shell
category_id: 2013.com.canonical.plainbox::disk
id: disk/stats_{name}
flags: deprecated
requires:
 block_device.state != 'removable' and block_device.name == '{name}'
user: root
command: disk_stats_test {name}
_description: This test checks {name} disk stats, generates some activity and rechecks stats to verify they've changed. It also verifies that disks appear in the various files they're supposed to.

unit: template
template-resource: device
template-filter: device.category == 'DISK'
plugin: shell
category_id: 2013.com.canonical.plainbox::disk
id: disk/smart_{name}
estimated_duration: 180.0
requires:
 package.name == 'smartmontools'
 block_device.smart == 'True'  and block_device.name == '{name}'
_summary:
 Test SMART capabilities for {product}
_description:
 This tests the SMART capabilities for {product} (Note that this test may not work against hardware RAID)
user: root
command: disk_smart -b /dev/{name} -s 130 -t 530

unit: template
template-resource: device
template-filter: device.category == 'DISK'
plugin: shell
category_id: 2013.com.canonical.plainbox::disk
id: disk/read_performance_{name}
estimated_duration: 65.0
requires:
 block_device.state != 'removable' and block_device.name == '{name}'
_summary: Disk performance test for {product}
_description: Disk performance test for {product}
user: root
command: disk_read_performance_test {name}

unit: template
template-resource: device
template-filter: device.category == 'DISK'
plugin: shell
category_id: 2013.com.canonical.plainbox::disk
id: disk/storage_device_{name}
estimated_duration: 375.0
user: root
requires:
 block_device.state != 'removable' and block_device.name == '{name}'
_summary: Disk I/O stress test for {product}
_description: Disk I/O stress test for {product}
command: storage_test {name}

unit: template
template-resource: device
template-filter: device.category == 'DISK'
plugin: shell
category_id: 2013.com.canonical.plainbox::disk
id: disk/disk_stress_ng_{name}
estimated_duration: 4560.0
user: root
requires:
 package.name == 'stress-ng'
 block_device.state != 'removable' and block_device.name == '{name}'
_summary: Disk stress_ng test for {product}
_description: Disk stress_ng test for {product}
command: disk_stress_ng {name} --base-time 240 --really-run

unit: template
template-resource: device
template-filter: device.category == 'DISK'
plugin: shell
category_id: 2013.com.canonical.plainbox::disk
id: disk/disk_cpu_load_{name}
estimated_duration: 15
user: root
requires:
 block_device.state != 'removable' and block_device.name == '{name}'
_summary: Check of CPU load imposed by {product}
_description: Check to ensure CPU load of {product} is not too high
command: disk_cpu_load {name}

plugin: shell
category_id: 2013.com.canonical.plainbox::disk
id: disk/spindown
estimated_duration: 875.0
requires:
 device.category == 'DISK'
 package.name == 'smartmontools'
user: root
command: spindown
_description:
 Some new hard drives include a feature that parks the drive heads after a short period of inactivity. This is a power-saving feature, but it can have a bad interaction with the operating system that results in the drive constantly parked then activated. This produces excess wear on the drive, potentially leading to early failures.

plugin: user-interact
category_id: 2013.com.canonical.plainbox::disk
id: disk/hdd-parking
estimated_duration: 60.0
requires:
    device.category == 'DISK'
    package.name == 'hdapsd'
depends: input/accelerometer
user: root
command: hdd_parking
_description:
 PURPOSE:
  This test checks that a systems drive protection mechanism works properly.
 STEPS:
  1. Click on Test
  2. Move the system under test around, ensuring it is raised and lowered at some point.
 VERIFICATION:
  The verification of this test is automated. Do not change the
  automatically selected result.

unit: template
template-resource: device
template-filter: device.driver == 'nvme' and device.category == 'OTHER'
plugin: shell
category_id: 2013.com.canonical.plainbox::disk
id: disk/apste_support_on_{name}
estimated_duration: 1.0
user: root
command: nvme get-feature -f 0x0c -H /dev/{name} | grep '(APSTE).*Enabled' && test -e /sys/class/nvme/{name}/power/pm_qos_latency_tolerance_us
_summary: Check support for Autonomous Power State Transition on {name}
